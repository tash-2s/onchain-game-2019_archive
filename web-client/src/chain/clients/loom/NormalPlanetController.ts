// generated by scripts/generateChainClients.js
export class NormalPlanetController {
  constructor(private chain: import("../../loom").Loom) {}

  setPlanets = (
    planetId: string | number,
    axialCoordinateQs: Array<string | number>,
    axialCoordinateRs: Array<string | number>,
    txOption?: {}
  ) => {
    return new this.chain.web3.eth.Contract(
      [
        {
          constant: false,
          inputs: [
            { internalType: "uint16", name: "planetId", type: "uint16" },
            { internalType: "int16[]", name: "axialCoordinateQs", type: "int16[]" },
            { internalType: "int16[]", name: "axialCoordinateRs", type: "int16[]" }
          ],
          name: "setPlanets",
          outputs: [],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
          signature: "0x9d2d2e9b"
        }
      ],
      this.chain.env.contractAddresses.NormalPlanetController,
      { from: this.chain.callerAddress() }
    ).methods
      .setPlanets(planetId, axialCoordinateQs, axialCoordinateRs)
      .send(txOption)
  }

  rankupPlanet = (
    userNormalPlanetId: string | number,
    targetRank: string | number,
    txOption?: {}
  ) => {
    return new this.chain.web3.eth.Contract(
      [
        {
          constant: false,
          inputs: [
            { internalType: "uint64", name: "userNormalPlanetId", type: "uint64" },
            { internalType: "uint8", name: "targetRank", type: "uint8" }
          ],
          name: "rankupPlanet",
          outputs: [],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
          signature: "0x2db45a59"
        }
      ],
      this.chain.env.contractAddresses.NormalPlanetController,
      { from: this.chain.callerAddress() }
    ).methods
      .rankupPlanet(userNormalPlanetId, targetRank)
      .send(txOption)
  }

  removePlanet = (userNormalPlanetId: string | number, txOption?: {}) => {
    return new this.chain.web3.eth.Contract(
      [
        {
          constant: false,
          inputs: [{ internalType: "uint64", name: "userNormalPlanetId", type: "uint64" }],
          name: "removePlanet",
          outputs: [],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
          signature: "0x10135315"
        }
      ],
      this.chain.env.contractAddresses.NormalPlanetController,
      { from: this.chain.callerAddress() }
    ).methods
      .removePlanet(userNormalPlanetId)
      .send(txOption)
  }
}
